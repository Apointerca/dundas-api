FORMAT: 1A
HOST: http://apointer.ca

# API documentation for Dundas

# Group General
Please refer to [Decision Graph](http://clojure-liberator.github.io/liberator/assets/img/decision-graph.svg) for details.  

## General HTTP status code
As HTTP status code contains a lot of information, here we demonstration some of them so we can use them directly in our response.  

### 200
This is the most common status code. It basically means things are going well.  
But usually it returns together with response body.  
Mostly for `GET` request.  

### 201
This status code indicates the requested resource has been created.  
Response body should be returned together.  
Mostly for `POST` request.  

### 204
Similar to `200`, but nothing would come together with this status.  
Mostly for `DELETE` and `PUT` requests.  

## General HTTP status error code

To avoid redundent error code declaration, here we list all the default meaning of corresponding error code.  
Please explicitly in each response if the response is different from what state here.  

### 400
Malformed request, this request is reported.  
### 401
This request is not authorized.  
### 403
This request doesn't have permission to access the resource.  
### 404
The target resource not found.  
### 405
HTTP request method not found.  
### 406
The request parameters and headers not acceptable.  
Please change it according to documentation.  
### 409
Usually happens when creating a resource that already exists.  

# Data Structure

## Pagination (object)
+ pageNumber: `1` (number, required) - The current page number, start from `1`
+ pageSize: `10` (number, required) - The number of record in each page. The minimum size is `5`
+ totalPage: `3` (number, required) - The total number of pages, minimum is `1`

# Data Structure

### Create User Request (object)
+ email: `test@apointer.ca` (string, required)
+ lastName: `Bernstein` (string, required)
+ firstName: `Rugal` (string, required)

### Authentication Response (object)
+ token: `eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJhdXRoZW50aWNhdGlvblRva2VuIiwiaXNzIjoiZHVuZGFzIiwidWlkIjoxMjMsImV4cCI6MTUyMjAzNzY3Mn0.hJvdKc8U0lNAre0Mhvo1U6BoBxuCU8CNf234Yo_Pus_M-BmuFUM5u6li_gFT4q5BBf17XCpfroybqAbtGAONZQ` (string, required)
+ expiration: `1396572606` (number, required) - The expiration time in Unix Epoch format
+ lastName: `Bernstein` (string, required)
+ firstName: `Rugal` (string, required)
+ avatar: `http://host/path` (string, optional) - The URL of avatar

### Create Employee Request (Create User Request)
+ password: `mypassword` (string, required)

### Create Customer Request (Create User Request)
+ password: `mypassword` (string, optional) - Leave it null or blank if it is an anonymous customer

### Customer Token Request (object)
+ email: `test@apointer.ca` (string, required)
+ password: `mypassword` (string, optional) - Leave it null or blank if it is an anonymous customer

### Employee Token Request (Customer Token Request)
+ password: `mypassword` (string, required)

# Group Create User

## Employee [/employee]

### Create Employee [POST]
+ request

    + Attributes (Create Employee Request)

+ response 201

    + Attributes (Authentication Response)

## Customer [/customer]

### Create Customer [POST]
+ request

    + Attributes (Create Customer Request)

+ response 201

    + Attributes (Authentication Response)

# Group User Login

## Employee Token [/employee/token]

### Employee Login [POST]
+ request

    + Attributes (Employee Token Request)

+ response 201

    + Attributes (Authentication Response)

## Customer Token [/customer/token]
Only registered customer can login in this way.

### Customer Login [POST]
+ request

    + Attributes (Customer Token Request)

+ response 200
This indicates the user is an existing unregistered customer.  
So the old user information will be overriden by the new information.  

    + Attributes (Authentication Response)

+ response 201
This indicates the user is a registered customer.  

    + Attributes (Authentication Response)

